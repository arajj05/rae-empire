const crypto = require('crypto');
const fs = require('fs');

// Set up the encryption/decryption key and algorithm
const encryptionKey = 'your-secret-key-here'; // Make sure to use a secure key in production
const algorithm = 'aes-256-ctr'; // AES encryption method

// Function to encrypt data
function encryptData(data) {
  const cipher = crypto.createCipher(algorithm, encryptionKey);
  let encrypted = cipher.update(data, 'utf8', 'hex');
  encrypted += cipher.final('hex');
  return encrypted;
}

// Function to decrypt data
function decryptData(encryptedData) {
  const decipher = crypto.createDecipher(algorithm, encryptionKey);
  let decrypted = decipher.update(encryptedData, 'hex', 'utf8');
  decrypted += decipher.final('utf8');
  return decrypted;
}

// Sample function to save passwords securely
function savePasswords(passwords) {
  const encryptedData = encryptData(JSON.stringify(passwords)); // Encrypting the passwords
  fs.writeFileSync('encryptedPasswords.txt', encryptedData, 'utf8'); // Save encrypted data
}

// Sample function to load and decrypt passwords
function loadPasswords() {
  const encryptedData = fs.readFileSync('encryptedPasswords.txt', 'utf8'); // Read encrypted data
  const decryptedData = decryptData(encryptedData); // Decrypt data
  return JSON.parse(decryptedData); // Return decrypted passwords as an object
}

// Sample usage
const passwords = {
  google: 'yourGooglePasswordHere',
  facebook: 'yourFacebookPasswordHere',
  email: 'yourEmailPasswordHere',
};

// Save the passwords securely
savePasswords(passwords);

// Later, when you need to access them
const decryptedPasswords = loadPasswords();
console.log(decryptedPasswords);
